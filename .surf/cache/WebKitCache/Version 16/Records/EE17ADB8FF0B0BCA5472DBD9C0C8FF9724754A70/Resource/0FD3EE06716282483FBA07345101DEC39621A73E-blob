"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([["app_assets_modules_github_editor_yaml-editors_workflow_workflow-rules_ts"],{86965:(e,t,r)=>{r.d(t,{Z:()=>i});var s=r(92458),n=r.n(s);function i(e,{capitalize:t=!1}={}){let r=function(e){let t={JAN:1,FEB:2,MAR:3,APR:4,MAY:5,JUN:6,JUL:7,AUG:8,SEP:9,OCT:10,NOV:11,DEC:12,SUN:1,MON:2,TUE:3,WED:4,THU:5,FRI:6,SAT:7},r={m:{constraints:[0,0,59,0],allowedSyntax:/^[0-9,*/?-]+$/},h:{constraints:[1,0,23,0],allowedSyntax:/^[0-9,*/?-]+$/},D:{constraints:[2,1,31,0],allowedSyntax:/^[0-9,*/?-]+$/},M:{constraints:[3,1,12,0],allowedSyntax:/^([0-9,*/?-]|JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)+$/},d:{constraints:[4,1,7,1],allowedSyntax:/^([0-6,*/?-]|SUN|MON|TUE|WED|THU|FRI|SAT)+$/}};function s(e,r=0,s=9999){if(isNaN(e))return t[e]||null;let n=+e+r;if(n<0||n>s)throw Error(`Number ${n} out of range [0, ${s}].`);return n}function n(e,t,r,s,n=1){e[t]||(e[t]=[]);for(let i=r;i<=s;i+=n)0>e[t].indexOf(i)&&e[t].push(i);e[t].sort((e,t)=>e-t)}try{return function(e){let t=e.replace(/(\s)+/g," ").split(" ");if(!function(e){if(e.length>Object.keys(r).length)return!1;for(let t=0;t<e.length;t++){let s=e[t],n=Object.values(r).find(e=>e.constraints[0]===t).allowedSyntax;if(!s.match(n)||s.startsWith("/"))return!1}return!0}(t))return null;let i={schedules:[{}],exceptions:[]};for(let e in r){let o=r[e],l=t[o.constraints[0]];if(l&&"*"!==l&&"?"!==l){let t=l.split(",");for(let r=0;r<t.length;r++)!function(e,t,r,i,o,l){let a;let u=t.schedules,c=u[u.length-1];null!==(a=s(e,l,o))?n(c,r,a,a):function(e,t,r,i,o,l){let a=e.split("/"),u=+a[1]||void 0,c=a[0];if("*"!==c&&"0"!==c){let e=c.split("-");i=s(e[0],l,o),o=s(e[1],l,o)||o}n(t,r,i,o,u)}(e,c,r,i,o,l)}(t[r],i,e,o.constraints[1],o.constraints[2],o.constraints[3])}}return i}(e.toUpperCase())}catch{return null}}(e);if(!r)return null;let s="";try{s=n().toString(e,{dayOfWeekStartIndexZero:!0,monthStartIndexZero:!1,use24HourTimeFormat:!0,throwExceptionOnParseError:!0})}catch(e){return null}return s?t?s:s.charAt(0).toLowerCase()+s.slice(1):null}},42064:(e,t,r)=>{r.d(t,{h:()=>O});var s=r(1877),n=r(2305),i=r(46426),o=r(36162),l=r(86965),a=r(51649);let u=["uses","with"],c=["run","working-directory","shell"],p=new Map,d=async(e,t)=>{let r=t[t.length-1],s=u.includes(r)?u:c,i=(0,n.h)(e,t.slice(0,t.length-1)),l=(s===u?c:u).filter(e=>i.includes(e));if(0!==l.length)return{message:(0,o.dy)` ${(0,n.W7)(r)} cannot be used with ${(0,n.fm)(l)} `,severity:"warning"}},f=["concurrency","container","continue-on-error","defaults","env","environment","if","name","needs","runs-on","outputs","permissions","services","steps","strategy","timeout-minutes"],h=["if","name","needs","permissions","secrets","uses","with","concurrency","strategy"],g=()=>!0,m=()=>i.$.isFeatureEnabled("ACTIONS_MATRIX_OUTPUT_IMPROVEMENTS"),y=()=>i.$.isFeatureEnabled("ACTIONS_GREEN_TREES"),b=()=>i.$.isFeatureEnabled("ACTIONS_NUMBER_TYPE_DISPATCH_INPUTS"),w=async(e,t)=>{if(!g())return;let r=t[t.length-1];if(f.includes(r)!==h.includes(r)){let s=(0,n.h)(e,t.slice(0,t.length-1)).filter(e=>e!==r),i=s.filter(e=>f.includes(e)!==h.includes(e)&&f.includes(e)!==f.includes(r));if(0===i.length)return;return{message:(0,o.dy)` You can't use ${(0,n.W7)(r)} with ${(0,n.fm)(i)} `,severity:"error"}}},v=async(e,t)=>{if(!m())return;let r=t[t.length-1];if((0,n.p0)(r))return;let s=(0,n.M9)(r),i=s.filter(e=>!e.startsWith("matrix."));if(0!==i.length)return{message:(0,o.dy)` Only ${(0,n.W7)("matrix")} context can be used in output key expression, invalid contexts found:
    ${i.join(", ")}`,severity:"error"}},k=async(e,t)=>{if(!m())return;let r=t[t.length-1];if((0,n.p0)(r))return;let s=(0,n.M9)(r),i=s.filter(e=>!e.startsWith("inputs."));if(0!==i.length)return{message:(0,o.dy)` Only ${(0,n.W7)("inputs")} context can be used in output key expression, invalid contexts found:
    ${i.join(", ")}`,severity:"error"}},j=["string","number","boolean"],_=["branch_protection_rule","check_run","check_suite","commit_comment","create","delete","deployment","deployment_status","discussion","discussion_comment","fork","gollum","issue_comment","issues","label","member","milestone","package","page_build","project","project_card","project_column","public","pull_request_review_comment","pull_request_review","registry_package","repository_dispatch","release","status","watch"],T=["merge_group","push","pull_request","pull_request_target","schedule","workflow_call","workflow_run","workflow_dispatch"].concat(_),$={single:["string"],items:{single:["string"]}},A={validateValue:n.Lb,single:["string"],items:{validateValue:n.Lb,single:["string"]}},x=()=>{let e={nullable:!0,rules:{branches:A,"branches-ignore":A,tags:A,"tags-ignore":A,paths:A,"paths-ignore":A,types:$}};return y()&&(e.rules={...e.rules,"reuse-previous-outcome":{nullable:!1,single:["boolean"]}}),e},S={merge_group:(()=>{let e={nullable:!0,rules:{branches:A,"branches-ignore":A}};return y()&&(e.rules={...e.rules,"reuse-previous-outcome":{nullable:!1,single:["boolean"]}}),e})(),push:x(),pull_request:x(),pull_request_target:x(),schedule:{items:{rules:{cron:{single:["string"],validateValue:async(e,t,r)=>{let s=(0,l.Z)(String(r));if(!s)return{message:(0,o.dy)` Unrecognized cron expression `,severity:"warning"};let n=document.getElementById("workflow-on-schedule-url").getAttribute("data-on-schedule-url");return{message:(0,o.dy)`
                Runs ${s}. <br />
                Actions schedules run at most every 5 minutes using UTC time.
                <a class="Link--inTextBlock" href="${n}" target="_blank">Learn more</a>
              `,severity:"info"}}}}}},workflow_run:{nullable:!0,rules:{branches:A,"branches-ignore":A,workflows:$,types:$}}};for(let e of _)S[e]={nullable:!0};let W={single:["string"],values:["read","write","none"]},E={actions:W,checks:W,contents:W,deployments:W,discussions:W,issues:W,packages:W,pages:W,"pull-requests":W,"repository-projects":W,"security-events":W,statuses:W,"id-token":W},V={image:{description:"The Docker image to use as the container to run the action",single:["string"]},env:{description:"Sets an array of environment variables in the container",map:{single:["string","number","boolean"]}},ports:{description:"Sets an array of ports to expose on the container",items:{single:["number","string"]}},volumes:{description:"Sets an array of volumes for the container to use",items:{single:["string"]}},options:{description:"Additional Docker container resource options",single:["string"]},credentials:{description:"The username and password to log in to the registry with",rules:{username:{description:"Container registry username",single:["string"],required:!0},password:{description:"Container registry password",single:["string"],required:!0}}}},I=()=>g()?{description:"A map of the secret parameters defined by the reusable workflow. Use `inherit` to pass all secrets to the referenced workflow",validateKey:w,async validateValue(e,t,r){if("string"==typeof r&&"inherit"!==r)return{message:(0,o.dy)`Use ${(0,n.W7)("inherit")} to pass all secrets to the called workflow.`,severity:"error"}},single:["string"],map:{single:j}}:{description:"A map of the secret parameters defined by the reusable workflow",validateKey:w,map:{single:j}},K=()=>({validateKey:w,description:"The type of virtual host machine to run the job on",required:!g(),multipleValues:!0,caseInsensitive:!0,single:["string"],items:{single:["string"]},rules:{group:{description:"The runner group name to target the runner group",single:["string"]},labels:{description:"The type of virtual host machine to run the job on",multipleValues:!0,caseInsensitive:!0}}});function R(e){return({number:"integer",string:"string",boolean:"boolean",environment:"string",choice:"string"})[e]||"invalid"}function O(e){let t={suggestionsForExpression:D,processExpression:L,rules:{name:{description:"The name of your workflow",single:["string"]},"run-name":{description:"The name of the run",single:["string"]},defaults:{description:"A set of workflow defaults that will apply to all jobs",rules:{run:{description:"Set default behavior for all `run` steps within workflow",rules:{shell:{description:"Set default `shell` for all `run` steps within workflow",single:["string"]},"working-directory":{description:"Set default `working-directory` for all `run` steps within workflow",single:["string"]}}}}},on:{description:"The name of the GitHub event that triggers the workflow",required:!0,values:T,multipleValues:!0,rules:S},concurrency:{description:"The concurrency for this job",single:["string"],rules:{group:{description:"The name of the concurrency group to wait for",single:["string"],required:!0},"cancel-in-progress":{description:"If new run should cancel in progress runs",single:["boolean"],required:!1}}},env:{description:"A map of environment variables that are available to all jobs and steps in the workflow",map:{single:j}},jobs:{description:"A workflow run is made up of one or more jobs",keyPlaceholder:"job_id",keyPlaceholderHelp:"Enter the id for the new job",map:{async validateKey(e,t){let r=t[1].toLowerCase();if(!/^[a-z_]/i.test(r))return{message:(0,o.dy)` Job id must start with a letter or ${(0,n.W7)("_")} `,severity:"error"};if(!/^[\w-]+$/i.test(r))return{message:(0,o.dy)` Job id must contain only alphanumeric characters, ${(0,n.W7)("-")}, or ${(0,n.W7)("_")} `,severity:"error"};let s=(0,n.h)(e,t.slice(0,t.length-1)).map(e=>e.toLowerCase()),i=s.filter(e=>e===r);if(i.length>1)return{message:(0,o.dy)` This job id is already used in another job `,severity:"error"};let l=(0,n.h)(e,t);if(g()&&!l.includes("runs-on")&&!l.includes("uses"))return{message:(0,o.dy)` A job requires either ${(0,n.W7)("runs-on")} or ${(0,n.W7)("uses")} `,severity:"error"}},rules:{if:{description:"You can use the `if` conditional to prevent a job from running unless a condition is met",single:["string","boolean"]},env:{validateKey:w,description:"A map of environment variables that are available to all steps in the job",map:{single:j}},name:{validateKey:w,description:"The name of the job displayed on GitHub",single:["string"],async validateValue(e,t,r){if("string"!=typeof r)return;let s=(0,n.DY)(e,["jobs"]);if(s&&"object"==typeof s)for(let e in s){if(e===t[1])continue;let n=s[e];if("object"==typeof n&&null!==n&&(n.name||e)===r)return{message:(0,o.dy)` This job name is already used in another job `,severity:"error"}}}},outputs:{validateKey:w,description:"Declare outputs from this job",map:{single:j,validateKey:v}},defaults:{validateKey:w,description:"A set of job defaults that will apply to all steps",rules:{run:{description:"Set default behavior for all `run` steps within job",rules:{shell:{description:"Set default `shell` for all `run` steps within job",single:["string"]},"working-directory":{description:"Set default `working-directory` for all `run` steps within job",single:["string"]}}}}},concurrency:{validateKey:w,description:"The concurrency for this job",single:["string"],rules:{group:{description:"The name of the concurrency group to wait for",single:["string"],required:!0},"cancel-in-progress":{description:"If new run should cancel in progress runs",single:["boolean"],required:!1}}},environment:{validateKey:w,description:"The environment for this job",single:["string"],rules:{name:{description:"The name of the environment",single:["string"],required:!0},url:{description:"Set the URL for accessing your environment",single:["string"],required:!1}}},needs:{description:"Identifies any jobs that must complete successfully before this job will run",multipleValues:!0,values:async(e,t)=>(0,n.h)(e,["jobs"]).filter(e=>e!==t[1]),async validateValue(e,t,r){if("string"!=typeof r)return;let s=await this.values(e,t);if(!s.includes(r))return r===t[1]?{message:(0,o.dy)` A job cannot depend on itself `,severity:"error"}:{message:(0,o.dy)` Unknown job ${(0,n.W7)(r)} `,severity:"error"}}},"runs-on":K(),steps:{validateKey:w,description:"The sequence of tasks to run in this job",items:{rules:{id:{description:"A unique identifier for the step",single:["string"],async validateValue(e,t,r){if("string"!=typeof r)return;let s=(0,n.DY)(e,t.slice(0,3));if(Array.isArray(s)&&((s=s.slice()).splice(+t[3],1),s.find(e=>"object"==typeof e&&null!==e&&e.id===r)))return{message:(0,o.dy)` This step id is already used in another step `,severity:"error"}}},if:{description:"Prevents the step from running unless the condition is met",single:["string","boolean"]},name:{description:"The name to display on GitHub",single:["string"]},uses:{description:"Selects an action to run as part of a step in your job",validateKey:d,single:["string"],async validateValue(e,t,r){if("string"!=typeof r||r.startsWith("docker://")||r.startsWith("./"))return;let[s,i]=r.split("@");if(!i)return{message:(0,o.dy)` Missing version for action `,severity:"error"};if(/\b[0-9a-f]{7,8}\b/i.test(i)){let e=document.getElementById("workflow-short-sha-warning-url").getAttribute("data-help-url");return{message:(0,o.dy)`
                            The ref ${(0,n.W7)(i)} looks like a short sha. This is not supported, please check the
                            <a class="Link--inTextBlock" href="${e}" target="_blank">documentation</a>.
                          `,severity:"warning"}}}},run:{description:"Runs command line programs using the operating system's shell",validateKey:d,single:["string"]},shell:{description:"Overrides the default shell settings in the virtual environment's operating system",validateKey:d,single:["string"],validateValue:async(e,t,r)=>{let s=["bash","pwsh","python"],i=["cmd","powershell"],l=["sh"];if("string"!=typeof r)return;let a=(0,n.DY)(e,["jobs",t[1],"runs-on"]);if((!a||"string"!=typeof a||(0,n.Qg)(a))&&[...s,...l,...i].includes(r)||a.startsWith("windows")&&[...i,...s].includes(r)||[...s,...l].includes(r)||"string"==typeof r&&r.match(/^\S+ +\{0\}$/i))return;let u=document.getElementById("workflow-shell-help-url").getAttribute("data-help-url");return{message:(0,o.dy)`Invalid value. Please check the
                          <a class="Link--inTextBlock" href="${u}" target="_blank">documentation</a>.`,severity:"error"}}},with:{description:"A map of the input parameters defined by the action",validateKey:d,map:{single:j}},env:{description:"Sets environment variables for steps to use in the virtual environment",map:{single:j}},"working-directory":{description:"The default directory that the action uses in a job's workspace",validateKey:d,single:["string"]},"continue-on-error":{description:"Prevents a job from failing when a step fails",single:["boolean"],values:["true","false"]},"timeout-minutes":{description:"The maximum number of minutes to run the step before killing the process",single:["number"]}}}},"timeout-minutes":{validateKey:w,description:"The maximum number of minutes to let a workflow run before GitHub automatically cancels it",single:["number"]},"continue-on-error":{validateKey:w,description:"Prevents a workflow run from failing when a job fails",single:["boolean"],values:["true","false"]},strategy:{validateKey:w,description:"A strategy creates a build matrix for your jobs",rules:{matrix:{description:"Set of different configurations of the virtual environment",map:{items:{single:j,map:{single:j}},async validateKey(e,t){let r=(0,n.DY)(e,t);if("object"!=typeof r||!Array.isArray(r))return;let s=["config","exclude","include"],i=t[t.length-1];if(s.includes(i)){if(0===r.length)return;if("object"!=typeof r[0])return{message:(0,o.dy)` ${(0,n.fm)(s)} must be an array of objects `,severity:"error"}}else{if(0===r.length)return{message:(0,o.dy)` ${i} must contain at least one value `,severity:"error"};if("object"==typeof r[0])return{message:(0,o.dy)` Matrix options must only contain primitive values `,severity:"error"}}}}},"fail-fast":{description:"When set to true, GitHub cancels all in-progress jobs if any matrix job fails",single:["boolean"],values:["true","false"]},"max-parallel":{description:"The maximum number of jobs that can run simultaneously",single:["number"]}}},container:{validateKey:w,description:"A container to run any steps in a job that don't already specify a container",single:["string"],rules:V},services:{validateKey:w,description:"Additional containers to host services for a job in a workflow",map:{single:["string"],rules:V}},permissions:{description:"Control permissions for runnings jobs in a workflow",single:["string"],values:["read-all","write-all"],rules:E},uses:{validateKey:w,description:"Run a reusable workflow as a job",single:["string"],async validateValue(e,t,r){if("string"!=typeof r)return;if(!r.includes(".github/workflows/")&&!r.includes(".github/workflows-lab/"))return{message:(0,o.dy)` Missing the full path for reusable workflow `,severity:"error"};let[s,i]=r.split("@");if(!i&&!r.startsWith("./"))return{message:(0,o.dy)` Missing version for reusable workflow `,severity:"error"};if(i&&r.startsWith("./"))return{message:(0,o.dy)` Cannot call a local reusable workflow with a version `,severity:"error"};if(""===i&&r.startsWith("./"))return{message:(0,o.dy)` Invalid path to local reusable workflow file (@) `,severity:"error"};if(/\b[0-9a-f]{7,8}\b/i.test(i)){let e=document.getElementById("workflow-short-sha-warning-url").getAttribute("data-help-url");return{message:(0,o.dy)`
                      The ref ${(0,n.W7)(i)} looks like a short sha. This is not supported, please check the
                      <a class="Link--inTextBlock" href="${e}" target="_blank">documentation</a>.
                    `,severity:"warning"}}}},secrets:I(),with:{description:"A map of the input parameters defined by the reusable workflow",validateKey:w,map:{single:j}}}}},permissions:{description:"Control permissions for runnings jobs in a workflow",single:["string"],values:["read-all","write-all"],rules:E}}};return S.workflow_dispatch={async validateValue(e,t,r){if(null!==r){let e=document.getElementById("workflow-dispatch-help-url")?.getAttribute("data-help-url")||"https://docs.github.com";return{message:(0,o.dy)` ${(0,n.W7)("workflow_dispatch")} only supports mapping values. <a class="Link--inTextBlock" href="${e}" target="_blank">Learn more</a> `,severity:"error"}}},nullable:!0,rules:{inputs:{description:"Inputs for a `workflow_dispatch` event",keyPlaceholder:"input_name",keyPlaceholderHelp:"Enter the name for the input",map:{nullable:!0,rules:{type:{description:"Type of this input, defaults to 'text'",single:["string"],values:b()?["text","choice","boolean","number"]:["text","choice","boolean"]},options:{description:"Options for an input of type 'choice'",multipleValues:!0,items:{single:["string"]}},required:{description:"Whether this input needs to be specified when running the workflow",single:["boolean"],values:["true","false"]},description:{description:"Displays a custom description instead of the name",single:["string"]},default:{async validateValue(e,t,r){let s=(0,n.DY)(e,[...t.slice(0,t.length-1),"type"]);if(s){if("boolean"===s){if("string"==typeof r&&("true"===r||"false"===r)||"boolean"==typeof r&&(!0===r||!1===r))return;return{message:(0,o.dy)`
                      ${(0,n.W7)("type")} is set to ${(0,n.W7)(s)} but ${(0,n.W7)("default")} has invalid value
                    `,severity:"error"}}if(b()&&"number"===s){if("number"==typeof r)return;return{message:(0,o.dy)`
                      ${(0,n.W7)("type")} is set to ${(0,n.W7)(s)} but ${(0,n.W7)("default")} has invalid value
                    `,severity:"error"}}}},description:"Default value for this input",single:b()?j:["string","boolean"]}}}}}},g()&&(S.workflow_call={nullable:!0,rules:{inputs:{description:"Inputs for a `workflow_call` event",keyPlaceholder:"input_name",keyPlaceholderHelp:"Enter the name for the input",map:{rules:{description:{description:"Displays a custom description instead of the name",single:["string"]},type:{async validateValue(e,t,r){if("string"!=typeof r||!j.includes(r))return{message:(0,o.dy)` ${(0,n.W7)("type")} must be one of: ${(0,n.fm)(j)} `,severity:"error"}},description:"The type of value callers can pass for this input",single:["string"],values:j,required:!0},required:{description:"Whether this input needs to be specified when calling the workflow",single:["boolean"],values:["true","false"]},default:{async validateValue(e,t,r){let s=(0,n.DY)(e,[...t.slice(0,t.length-1),"type"]);if(s&&"string"!==s&&typeof r!==s)return{message:(0,o.dy)`
                      ${(0,n.W7)("type")} is set to ${(0,n.W7)(s)}, but ${(0,n.W7)("default")} is of type
                      ${(0,n.W7)(typeof r)}
                    `,severity:"error"}},description:"Default value for this input",single:j}}}},outputs:{description:"Outputs for a `workflow_call` event",keyPlaceholder:"output_name",keyPlaceholderHelp:"Enter the name for the output",map:{validateKey:k,rules:{description:{description:"Displays a custom description instead of the name",single:["string"]},value:{description:"The value callers can receive from this output",single:j}}}},secrets:{description:"Inputs passed as secrets for a `workflow_call` event",keyPlaceholder:"secret_name",keyPlaceholderHelp:"Enter the name for the secret",map:{rules:{description:{description:"Displays a custom description instead of the name",single:["string"]},required:{description:"Whether this secret needs to be specified when calling the workflow",single:["boolean"],values:["true","false"]}}}}}}),!function(e){p.clear();let t=e=>{for(let[t,r]of Object.entries(e))if(!p.has(t)){let e="string";r.type?e=R(r.type):r.default&&(e=R(typeof r.default)),p.set(t,e)}};e&&e.on&&(e.on.workflow_dispatch&&e.on.workflow_dispatch.inputs&&t(e.on.workflow_dispatch.inputs),e.on.workflow_call&&e.on.workflow_call.inputs&&t(e.on.workflow_call.inputs))}(e),!g()&&t.rules&&t.rules.jobs.map?.rules&&(delete t.rules.jobs.map.rules.uses,delete t.rules.jobs.map.rules.secrets,delete t.rules.jobs.map.rules.with),t}let q={keys:{github:{keys:{event:{},workflow:{},actor:"string",repository:"string",event_name:"string",sha:"string",ref:"string",head_ref:"string",base_ref:"string"}},job:{keys:{status:"string",container:{keys:{network:"string",id:"string"}},services:{keys:{network:"string"},map:{keys:{id:"string",ports:{map:{type:"number"}}}},resolver:async(e,t)=>(0,n.h)(e,["jobs",t[1],"services"])}}},steps:{map:{keys:{outputs:{map:{type:"string"}}}},async resolver(e,t){let r=(0,n.DY)(e,["jobs",t[1],"steps"])||[];return Array.isArray(r)?r.map(e=>e&&"object"==typeof e&&e.id?String(e.id):"").filter(Boolean):[]}},runner:{},secrets:{keys:{GITHUB_TOKEN:"string"},map:{type:"string"}},matrix:{map:{type:"string"},resolver:async(e,t)=>(0,n.h)(e,["jobs",t[1],"strategy","matrix"])}}};async function N(e,t,r){let n=e.slice(0),i=q;for(;n.length>0;){let e=(0,s.x7)(n.shift());if(i.keys&&i.keys[e]){if("string"==typeof i.keys[e])return null;i=i.keys[e]}else if(n.length>0)return null}if(i.resolver){let e=await i.resolver(t,r);return e.map(e=>({text:e,terminal:!0}))}if(i.keys){let e=i.keys;return Object.keys(e).map(t=>({text:t,terminal:"string"==typeof e[t]}))}return null}let P="([a-z0-9_\\-.[\\]']+)?$",U=RegExp(P,"i"),C=RegExp(`\\\${{(?:.+?)?${P}`,"i");async function D(e,t,r){if("jobs"!==t[0]||t.length<2||"if"===t[t.length-1]?1:0){if("if"===t[t.length-1]){let s=r.match(U);if(s)return H(e,t,s[1]||"")}}else{let s=r.match(C);if(s)return H(e,t,s[1]||"")}return null}async function L(e,t,r,s){let i=[];if(s.single?i=s.single:s.values?i=Array.isArray(s.values)?s.values.map(e=>R(typeof e)):(await s.values(s,t)).map(e=>R(typeof e)):(s.map||s.rules)&&i.push("object"),i.includes("object")){if((0,n.iF)(r))return;if(1===i.length&&(0,n.Fo)(r))return(0,a.p)(i,(0,n.W7)("string"))}let o=(0,n.lj)(r);for(let e of o){let t=e.split("."),r=t[1].trim(),s=p.get(r);if(s&&!i.includes(s))return(0,a.p)(i,(0,n.W7)(s))}}function M(e,t,r){return{name:e,description:t,args:r,jobFunction:!1}}function B(e,t){return{name:e,description:t,args:[],jobFunction:!0}}let F=[M("contains","Returns true if the searchString contains searchValue",[{name:"searchString"},{name:"searchValue"}]),M("startsWith","Returns true when searchString starts with searchValue",[{name:"searchString"},{name:"searchValue"}]),M("endsWith","Returns true if searchString ends with searchValue",[{name:"searchString"},{name:"searchValue"}]),M("format","Replaces values in the string, with the variable replaceValueN",[{name:"string"},{name:"replaceValueN"}]),M("join","All values in element are concatenated into a string",[{name:"element"},{name:"optionalElem"}]),M("toJson","Returns a pretty-print JSON representation of value",[{name:"value"}]),M("hashFiles","Returns a single hash for the set of files that matches the path pattern",[{name:"path"}]),B("success","Returns true when the previous step of a job succeeds"),B("always","Forces a conditional to evaluate as true, even when canceled"),B("cancelled","Returns true if the workflow was canceled"),B("failure","Returns true when the previous step of a job fails")];async function H(e,t,r){let n=r.split(/(?=\[)|(?=\.)/),i=n[n.length-1],o=(0,s.x7)(n[n.length-1]),l=await N(n,e,t)||[],a=(0,s.m_)(l,o),u=a.map(e=>{var t,r;return{displayText:e.text,snippet:{tokens:[(t=e.text,r=1===n.length,t.match(/^[a-z][a-z0-9_-]+?$/i)?`${r?"":"."}${t}`:`['${t}']`)],keepCursorLocation:!e.terminal},replace:i}});if(n.length<2){let e=o.toLowerCase(),r="if"===t[t.length-1];for(let t of F){if(t.jobFunction&&!r)continue;let n=t.name.toLowerCase();if(!e||(0,s.nD)(e,n)){let e=[];if(t.args.length>0){for(let r of(e.push(`${t.name}(`),t.args))e.length>1&&e.push(", "),e.push(r.name);e.push(")")}else e.push(`${t.name}()`);u.push({displayText:`${t.name}(${t.args.length>0?"\u2026":""})`,description:t.description,snippet:{tokens:e},replace:i})}}}return u}}}]);
//# sourceMappingURL=app_assets_modules_github_editor_yaml-editors_workflow_workflow-rules_ts-eafff7af7650.js.map